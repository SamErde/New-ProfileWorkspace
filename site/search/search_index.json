{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#powershell-pre-workout-pspreworkout","title":"PowerShell Pre-Workout (PSPreworkout)","text":"<p>A special mix of tools (and experiments) to help jump start your PowerShell session!</p> <p> </p> <p> </p> <p> </p>"},{"location":"Edit-WingetSettings/","title":"Edit-WingetSettings","text":""},{"location":"Edit-WingetSettings/#synopsis","title":"SYNOPSIS","text":"<p>Edit the WinGet settings file.</p>"},{"location":"Edit-WingetSettings/#syntax","title":"SYNTAX","text":"<pre><code>Edit-WingetSettings [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Edit-WingetSettings/#description","title":"DESCRIPTION","text":"<p>A shortcut to edit the WinGet settings file. This will create one if it does not already exist.</p>"},{"location":"Edit-WingetSettings/#examples","title":"EXAMPLES","text":""},{"location":"Edit-WingetSettings/#example-1","title":"EXAMPLE 1","text":"<pre><code>Edit-WinGetSettings\n</code></pre>"},{"location":"Edit-WingetSettings/#parameters","title":"PARAMETERS","text":""},{"location":"Edit-WingetSettings/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Edit-WingetSettings/#inputs","title":"INPUTS","text":""},{"location":"Edit-WingetSettings/#outputs","title":"OUTPUTS","text":""},{"location":"Edit-WingetSettings/#notes","title":"NOTES","text":"<p>This is just an idea that may or may not prove to be useful.</p>"},{"location":"Edit-WingetSettings/#related-links","title":"RELATED LINKS","text":""},{"location":"Get-EnvironmentVariable/","title":"Get-EnvironmentVariable","text":""},{"location":"Get-EnvironmentVariable/#synopsis","title":"SYNOPSIS","text":"<p>Retrieves the value of an environment variable.</p>"},{"location":"Get-EnvironmentVariable/#syntax","title":"SYNTAX","text":"<pre><code>Get-EnvironmentVariable [[-Name] &lt;String&gt;] [[-Target] &lt;EnvironmentVariableTarget&gt;] [-All]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Get-EnvironmentVariable/#description","title":"DESCRIPTION","text":"<p>The Get-EnvironmentVariable function retrieves the value of the specified environment variable or displays all environment variables.</p>"},{"location":"Get-EnvironmentVariable/#examples","title":"EXAMPLES","text":""},{"location":"Get-EnvironmentVariable/#example-1","title":"EXAMPLE 1","text":"<pre><code>Get-EnvironmentVariable -Name \"PATH\"\nRetrieves the value of the \"PATH\" environment variable.\n</code></pre>"},{"location":"Get-EnvironmentVariable/#parameters","title":"PARAMETERS","text":""},{"location":"Get-EnvironmentVariable/#-name","title":"-Name","text":"<p>The name of the environment variable to retrieve.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Get-EnvironmentVariable/#-target","title":"-Target","text":"<p>The target of the environment variable to retrieve. Defaults to Machine. (Process, User, or Machine)</p> <pre><code>Type: EnvironmentVariableTarget\nParameter Sets: (All)\nAliases:\nAccepted values: Process, User, Machine\n\nRequired: False\nPosition: 2\nDefault value: Machine\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Get-EnvironmentVariable/#-all","title":"-All","text":"<p>Switch to show environment variables in all target scopes.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Get-EnvironmentVariable/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Get-EnvironmentVariable/#inputs","title":"INPUTS","text":""},{"location":"Get-EnvironmentVariable/#outputs","title":"OUTPUTS","text":""},{"location":"Get-EnvironmentVariable/#systemstring","title":"System.String","text":""},{"location":"Get-EnvironmentVariable/#notes","title":"NOTES","text":"<p>Variable names are case-sensitive on Linux and macOS, but not on Windows.</p> <p>Why is 'Target' used by .NET instead of the familiar 'Scope' parameter name? @IISResetMe (Mathias R. Jessen) explains: \"Scope\" would imply some sort of integrated hierarchy of env variables - that's not really the case. Target=Process translates to kernel32!GetEnvironmentVariable (which then in turn reads the PEB from the calling process), whereas Target={User,Machine} causes a registry lookup against environment data in either HKCU or HKLM.</p> <p>The relevant sources for the User and Machine targets are in the registry at: - HKEY_CURRENT_USER\\Environment - HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment</p>"},{"location":"Get-EnvironmentVariable/#related-links","title":"RELATED LINKS","text":"<p>https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables</p>"},{"location":"Initialize-Configuration/","title":"Initialize-Configuration","text":""},{"location":"Initialize-Configuration/#synopsis","title":"SYNOPSIS","text":"<p>Initialize configuration your PowerShell environment and git.</p>"},{"location":"Initialize-Configuration/#syntax","title":"SYNTAX","text":"<pre><code>Initialize-Configuration [[-Name] &lt;String&gt;] [[-Email] &lt;String&gt;] [[-CentralProfile] &lt;String&gt;]\n [[-ConsoleFont] &lt;String&gt;] [[-Packages] &lt;String[]&gt;] [-SkipPackages] [-PickPackages] [[-Modules] &lt;String[]&gt;]\n [-SkipModules] [-PickModules] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Initialize-Configuration/#description","title":"DESCRIPTION","text":"<p>Install supporting packages, configure git, and set your console font with this function.</p>"},{"location":"Initialize-Configuration/#examples","title":"EXAMPLES","text":""},{"location":"Initialize-Configuration/#example-1","title":"EXAMPLE 1","text":"<pre><code>Initialize-Configuration\n</code></pre> <p>Init-Configuration -Name 'Sam Erde' -Email 'sam@example.local' -ConsoleFont 'FiraCode Nerd Font'</p>"},{"location":"Initialize-Configuration/#parameters","title":"PARAMETERS","text":""},{"location":"Initialize-Configuration/#-name","title":"-Name","text":"<p>Your name to be used for git commits.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Initialize-Configuration/#-email","title":"-Email","text":"<p>Your email to be used for git commits.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Initialize-Configuration/#-centralprofile","title":"-CentralProfile","text":"<p>The file path to your central PowerShell profile.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Initialize-Configuration/#-consolefont","title":"-ConsoleFont","text":"<p>The font to use for your consoles (PowerShell, Windows PowerShell, git bash, etc.)</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases: Font\n\nRequired: False\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Initialize-Configuration/#-packages","title":"-Packages","text":"<p>Packages to install with winget.</p> <pre><code>Type: String[]\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 5\nDefault value: @('Microsoft.PowerShell', 'Microsoft.WindowsTerminal', 'git.git', 'JanDeDobbeleer.OhMyPosh')\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Initialize-Configuration/#-skippackages","title":"-SkipPackages","text":"<p>Option to skip installation of default packages.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Initialize-Configuration/#-pickpackages","title":"-PickPackages","text":"<p>Choose which packages you want to install.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Initialize-Configuration/#-modules","title":"-Modules","text":"<p>PowerShell modules to install.</p> <pre><code>Type: String[]\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 6\nDefault value: @('CompletionPredictor', 'Microsoft.PowerShell.ConsoleGuiTools', 'Microsoft.PowerShell.PSResourceGet', 'posh-git', 'PowerShellForGitHub', 'Terminal-Icons')\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Initialize-Configuration/#-skipmodules","title":"-SkipModules","text":"<p>Option to skip installation of default modules.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Initialize-Configuration/#-pickmodules","title":"-PickModules","text":"<p>Choose which modules you want to install.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Initialize-Configuration/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Initialize-Configuration/#inputs","title":"INPUTS","text":""},{"location":"Initialize-Configuration/#outputs","title":"OUTPUTS","text":""},{"location":"Initialize-Configuration/#notes","title":"NOTES","text":"<p>To Do   Create basic starter profile if none exist   Create dot-sourced profile   Create interactive picker for packages and modules (separate functions)   Bootstrap Out-GridView or Out-ConsoleGridView</p>"},{"location":"Initialize-Configuration/#related-links","title":"RELATED LINKS","text":""},{"location":"Install-OhMyPosh/","title":"Install-OhMyPosh","text":""},{"location":"Install-OhMyPosh/#synopsis","title":"SYNOPSIS","text":"<p>Install Oh My Posh and add it to your profile.</p>"},{"location":"Install-OhMyPosh/#syntax","title":"SYNTAX","text":"<pre><code>Install-OhMyPosh [-WingetSource &lt;String&gt;] [-Method &lt;String&gt;] [-InstallNerdFont] [-Font &lt;String&gt;]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Install-OhMyPosh/#description","title":"DESCRIPTION","text":"<p>An over-engineered script to install Oh My Posh.</p>"},{"location":"Install-OhMyPosh/#examples","title":"EXAMPLES","text":""},{"location":"Install-OhMyPosh/#example-1","title":"EXAMPLE 1","text":"<pre><code>Install-OhMyPosh\n</code></pre>"},{"location":"Install-OhMyPosh/#parameters","title":"PARAMETERS","text":""},{"location":"Install-OhMyPosh/#-wingetsource","title":"-WingetSource","text":"<p>Specify which source to install from.</p> <ul> <li>winget  - Install from winget (default).</li> <li>msstore - Install from the Microsoft Store.</li> </ul> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: Winget\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Install-OhMyPosh/#-method","title":"-Method","text":"<p>Specify which tool to install Oh My Posh with.</p> <ul> <li>chocolatey</li> <li>direct (default)</li> <li>scoop</li> <li>winget</li> </ul> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: Direct\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Install-OhMyPosh/#-installnerdfont","title":"-InstallNerdFont","text":"<p>Use this switch if you want to install a nerd font for full glyph capabilities in your prompt.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Install-OhMyPosh/#-font","title":"-Font","text":"<p>Choose a nerd font to install.</p> <ul> <li>Default - Installs \"Meslo\" as the default nerd font.</li> <li>Select  - Lets you choose a nerd font from the list.</li> </ul> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: Default\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Install-OhMyPosh/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Install-OhMyPosh/#inputs","title":"INPUTS","text":""},{"location":"Install-OhMyPosh/#outputs","title":"OUTPUTS","text":""},{"location":"Install-OhMyPosh/#notes","title":"NOTES","text":""},{"location":"Install-OhMyPosh/#related-links","title":"RELATED LINKS","text":""},{"location":"Install-PowerShellISE/","title":"Install-PowerShellISE","text":""},{"location":"Install-PowerShellISE/#synopsis","title":"SYNOPSIS","text":"<p>Install the Windows PowerShell ISE if you removed it after installing VS Code.</p>"},{"location":"Install-PowerShellISE/#syntax","title":"SYNTAX","text":"<pre><code>Install-PowerShellISE [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Install-PowerShellISE/#description","title":"DESCRIPTION","text":"<p>This script installs the Windows PowerShell ISE if it is not already. It includes a step that resets the Windows Automatic Update server source in the registry temporary, which may resolve errors that some people experience while trying to add Windows Capabilities. This was created because Out-GridView in Windows PowerShell 5.1 does not work without the ISE installed. However, Out-GridView was rewritten and included in PowerShell 7 for Windows.</p>"},{"location":"Install-PowerShellISE/#examples","title":"EXAMPLES","text":""},{"location":"Install-PowerShellISE/#example-1","title":"EXAMPLE 1","text":"<pre><code>Install-PowerShellISE\n</code></pre>"},{"location":"Install-PowerShellISE/#parameters","title":"PARAMETERS","text":""},{"location":"Install-PowerShellISE/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Install-PowerShellISE/#inputs","title":"INPUTS","text":""},{"location":"Install-PowerShellISE/#outputs","title":"OUTPUTS","text":""},{"location":"Install-PowerShellISE/#notes","title":"NOTES","text":"<p>To Do:     - Check for Windows client vs Windows Server OS     - Add parameter to make the Windows Update registry change optional     - Requires admin but adding that breaks the build</p>"},{"location":"Install-PowerShellISE/#related-links","title":"RELATED LINKS","text":""},{"location":"Install-WinGet/","title":"Install-WinGet","text":""},{"location":"Install-WinGet/#synopsis","title":"SYNOPSIS","text":"<p>Install Winget</p>"},{"location":"Install-WinGet/#syntax","title":"SYNTAX","text":"<pre><code>Install-WinGet [[-DownloadPath] &lt;String&gt;] [-DownloadOnly] [-KeepDownload]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Install-WinGet/#description","title":"DESCRIPTION","text":"<p>Install WinGet on Windows Sandbox (or on builds of Windows 10 prior to build 1709 that did not ship with it preinstalled).</p>"},{"location":"Install-WinGet/#examples","title":"EXAMPLES","text":""},{"location":"Install-WinGet/#example-1","title":"EXAMPLE 1","text":"<pre><code>Install-WinGet\n</code></pre>"},{"location":"Install-WinGet/#example-2","title":"EXAMPLE 2","text":"<pre><code>Install-WinGet -KeepDownload\n</code></pre> <p>Installs WinGet and keeps the downloaded AppX packages.</p>"},{"location":"Install-WinGet/#parameters","title":"PARAMETERS","text":""},{"location":"Install-WinGet/#-downloadpath","title":"-DownloadPath","text":"<p>Path of the directory to save the downloaded packages in (optional).</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Install-WinGet/#-downloadonly","title":"-DownloadOnly","text":"<p>Download the packages without installing them (optional).</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Install-WinGet/#-keepdownload","title":"-KeepDownload","text":"<p>Keep the downloaded packages (optional).</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Install-WinGet/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Install-WinGet/#inputs","title":"INPUTS","text":""},{"location":"Install-WinGet/#outputs","title":"OUTPUTS","text":""},{"location":"Install-WinGet/#notes","title":"NOTES","text":"<p>To Do: - Check for newer versions of packages on GitHub - Error handling - Create the target folder if it does not already exist</p>"},{"location":"Install-WinGet/#related-links","title":"RELATED LINKS","text":""},{"location":"New-Credential/","title":"New-Credential","text":""},{"location":"New-Credential/#synopsis","title":"SYNOPSIS","text":"<p>Create a new secure credential.</p>"},{"location":"New-Credential/#syntax","title":"SYNTAX","text":"<pre><code>New-Credential [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"New-Credential/#description","title":"DESCRIPTION","text":"<p>Create a new secure credential to use in other functions.</p>"},{"location":"New-Credential/#examples","title":"EXAMPLES","text":""},{"location":"New-Credential/#example-1","title":"EXAMPLE 1","text":"<pre><code>$Credential = New-Credential\n</code></pre>"},{"location":"New-Credential/#parameters","title":"PARAMETERS","text":""},{"location":"New-Credential/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"New-Credential/#inputs","title":"INPUTS","text":""},{"location":"New-Credential/#outputs","title":"OUTPUTS","text":""},{"location":"New-Credential/#notes","title":"NOTES","text":""},{"location":"New-Credential/#related-links","title":"RELATED LINKS","text":""},{"location":"New-ScriptFromTemplate/","title":"New-ScriptFromTemplate","text":""},{"location":"New-ScriptFromTemplate/#synopsis","title":"SYNOPSIS","text":"<p>Create a new advanced function from a template.</p>"},{"location":"New-ScriptFromTemplate/#syntax","title":"SYNTAX","text":""},{"location":"New-ScriptFromTemplate/#named","title":"Named","text":"<pre><code>New-ScriptFromTemplate -Name &lt;String&gt; [-SkipValidation] [-Synopsis &lt;String&gt;] [-Description &lt;String&gt;]\n [-Alias &lt;String&gt;] [-Path &lt;String&gt;] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"New-ScriptFromTemplate/#verbnoun","title":"VerbNoun","text":"<pre><code>New-ScriptFromTemplate -Verb &lt;String&gt; -Noun &lt;String&gt; [-SkipValidation] [-Synopsis &lt;String&gt;]\n [-Description &lt;String&gt;] [-Alias &lt;String&gt;] [-Path &lt;String&gt;]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"New-ScriptFromTemplate/#description","title":"DESCRIPTION","text":"<p>This function creates a new function from a template and saves it to a file with the name of the function. It takes values for the function's synopsis, description, and alias as parameters and populates comment- based help for the new function automatically.</p>"},{"location":"New-ScriptFromTemplate/#examples","title":"EXAMPLES","text":""},{"location":"New-ScriptFromTemplate/#example-1","title":"EXAMPLE 1","text":"<pre><code>New-Function -Name \"Get-Demo\" -Synopsis \"Get a demo.\" -Description \"This function gets a demo.\" -Alias \"Get-Sample\"\n</code></pre>"},{"location":"New-ScriptFromTemplate/#parameters","title":"PARAMETERS","text":""},{"location":"New-ScriptFromTemplate/#-name","title":"-Name","text":"<p>The name of the new function to create. It is recommended to use ApprovedVerb-Noun for names.</p> <pre><code>Type: String\nParameter Sets: Named\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"New-ScriptFromTemplate/#-verb","title":"-Verb","text":"<p>The verb to use for the function name.</p> <pre><code>Type: String\nParameter Sets: VerbNoun\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"New-ScriptFromTemplate/#-noun","title":"-Noun","text":"<p>The noun to use for the function name.</p> <pre><code>Type: String\nParameter Sets: VerbNoun\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"New-ScriptFromTemplate/#-skipvalidation","title":"-SkipValidation","text":"<p>Optionally skip validation of the script name. This will not check for use of approved verbs or restricted characters.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"New-ScriptFromTemplate/#-synopsis","title":"-Synopsis","text":"<p>A synopsis of the new function.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"New-ScriptFromTemplate/#-description","title":"-Description","text":"<p>A description of the new function.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"New-ScriptFromTemplate/#-alias","title":"-Alias","text":"<p>Optionally define an alias for the new function.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"New-ScriptFromTemplate/#-path","title":"-Path","text":"<p>The path of the directory to save the new script in.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"New-ScriptFromTemplate/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"New-ScriptFromTemplate/#inputs","title":"INPUTS","text":""},{"location":"New-ScriptFromTemplate/#outputs","title":"OUTPUTS","text":""},{"location":"New-ScriptFromTemplate/#notes","title":"NOTES","text":""},{"location":"New-ScriptFromTemplate/#related-links","title":"RELATED LINKS","text":""},{"location":"PSPreworkout/","title":"PSPreworkout Module","text":""},{"location":"PSPreworkout/#description","title":"Description","text":"<p>A special mix of tools to help jump start your PowerShell session!</p>"},{"location":"PSPreworkout/#pspreworkout-cmdlets","title":"PSPreworkout Cmdlets","text":""},{"location":"PSPreworkout/#edit-wingetsettings","title":"Edit-WingetSettings","text":"<p>Edit the WinGet settings file.</p>"},{"location":"PSPreworkout/#get-environmentvariable","title":"Get-EnvironmentVariable","text":"<p>Retrieves the value of an environment variable.</p>"},{"location":"PSPreworkout/#initialize-configuration","title":"Initialize-Configuration","text":"<p>Initialize configuration your PowerShell environment and git.</p>"},{"location":"PSPreworkout/#install-ohmyposh","title":"Install-OhMyPosh","text":"<p>Install Oh My Posh and add it to your profile.</p>"},{"location":"PSPreworkout/#install-powershellise","title":"Install-PowerShellISE","text":"<p>Install the Windows PowerShell ISE if you removed it after installing VS Code.</p>"},{"location":"PSPreworkout/#install-winget","title":"Install-WinGet","text":"<p>Install Winget</p>"},{"location":"PSPreworkout/#new-credential","title":"New-Credential","text":"<p>Create a new secure credential.</p>"},{"location":"PSPreworkout/#new-scriptfromtemplate","title":"New-ScriptFromTemplate","text":"<p>Create a new advanced function from a template.</p>"},{"location":"PSPreworkout/#set-environmentvariable","title":"Set-EnvironmentVariable","text":"<p>Set environment variables.</p>"},{"location":"PSPreworkout/#test-iselevated","title":"Test-IsElevated","text":"<p>Check if you are running an elevated shell with administrator or root privileges.</p>"},{"location":"PSPreworkout/#update-allthethings","title":"Update-AllTheThings","text":"<p>Update all the things! Update-AllTheThings.ps1 </p>"},{"location":"Set-EnvironmentVariable/","title":"Set-EnvironmentVariable","text":""},{"location":"Set-EnvironmentVariable/#synopsis","title":"SYNOPSIS","text":"<p>Set environment variables.</p>"},{"location":"Set-EnvironmentVariable/#syntax","title":"SYNTAX","text":"<pre><code>Set-EnvironmentVariable [-Name] &lt;String&gt; [-Value] &lt;String&gt; [[-Target] &lt;EnvironmentVariableTarget&gt;]\n [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Set-EnvironmentVariable/#description","title":"DESCRIPTION","text":"<p>Set environment variables in any OS using .NET types.</p>"},{"location":"Set-EnvironmentVariable/#examples","title":"EXAMPLES","text":""},{"location":"Set-EnvironmentVariable/#example-1","title":"EXAMPLE 1","text":"<pre><code>An example\n</code></pre>"},{"location":"Set-EnvironmentVariable/#parameters","title":"PARAMETERS","text":""},{"location":"Set-EnvironmentVariable/#-name","title":"-Name","text":"<p>Parameter description</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Set-EnvironmentVariable/#-value","title":"-Value","text":"<p>Parameter description</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Set-EnvironmentVariable/#-target","title":"-Target","text":"<p>Parameter description</p> <pre><code>Type: EnvironmentVariableTarget\nParameter Sets: (All)\nAliases:\nAccepted values: Process, User, Machine\n\nRequired: False\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Set-EnvironmentVariable/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Set-EnvironmentVariable/#inputs","title":"INPUTS","text":""},{"location":"Set-EnvironmentVariable/#outputs","title":"OUTPUTS","text":""},{"location":"Set-EnvironmentVariable/#notes","title":"NOTES","text":"<p>General notes</p>"},{"location":"Set-EnvironmentVariable/#related-links","title":"RELATED LINKS","text":""},{"location":"Test-IsElevated/","title":"Test-IsElevated","text":""},{"location":"Test-IsElevated/#synopsis","title":"SYNOPSIS","text":"<p>Check if you are running an elevated shell with administrator or root privileges.</p>"},{"location":"Test-IsElevated/#syntax","title":"SYNTAX","text":"<pre><code>Test-IsElevated [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Test-IsElevated/#description","title":"DESCRIPTION","text":"<p>Check if you are running an elevated shell with administrator or root privileges.</p>"},{"location":"Test-IsElevated/#examples","title":"EXAMPLES","text":""},{"location":"Test-IsElevated/#example-1","title":"EXAMPLE 1","text":"<pre><code>Test-IsElevated\n</code></pre>"},{"location":"Test-IsElevated/#parameters","title":"PARAMETERS","text":""},{"location":"Test-IsElevated/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Test-IsElevated/#inputs","title":"INPUTS","text":""},{"location":"Test-IsElevated/#outputs","title":"OUTPUTS","text":""},{"location":"Test-IsElevated/#boolean","title":"Boolean","text":""},{"location":"Test-IsElevated/#notes","title":"NOTES","text":""},{"location":"Test-IsElevated/#related-links","title":"RELATED LINKS","text":""},{"location":"Update-AllTheThings/","title":"Update-AllTheThings","text":""},{"location":"Update-AllTheThings/#synopsis","title":"SYNOPSIS","text":"<p>Update all the things!</p>"},{"location":"Update-AllTheThings/#syntax","title":"SYNTAX","text":"<pre><code>Update-AllTheThings [-SkipModules] [-SkipScripts] [-SkipHelp] [-SkipWinGet] [-IncludeChocolatey]\n [-WhatIf] [-Confirm] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"Update-AllTheThings/#description","title":"DESCRIPTION","text":"<p>A script to automatically update all PowerShell modules, PowerShell Help, and packages (apt, brew, chocolately, winget).</p>"},{"location":"Update-AllTheThings/#examples","title":"EXAMPLES","text":""},{"location":"Update-AllTheThings/#example-1","title":"EXAMPLE 1","text":"<pre><code>Update-AllTheThings\n</code></pre> <p>Updates all of the things it can!</p>"},{"location":"Update-AllTheThings/#parameters","title":"PARAMETERS","text":""},{"location":"Update-AllTheThings/#-skipmodules","title":"-SkipModules","text":"<p>Skip the step that updates PowerShell modules</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Update-AllTheThings/#-skipscripts","title":"-SkipScripts","text":"<p>Skip the step that updates PowerShell scripts</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Update-AllTheThings/#-skiphelp","title":"-SkipHelp","text":"<p>Skip the step that updates PowerShell help</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Update-AllTheThings/#-skipwinget","title":"-SkipWinGet","text":"<p>Skip the step that updates WinGet packages</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Update-AllTheThings/#-includechocolatey","title":"-IncludeChocolatey","text":"<p>Skip the step that updates Chocolatey packages</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: Skip-Choco\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Update-AllTheThings/#-whatif","title":"-WhatIf","text":"<p>Shows what would happen if the cmdlet runs. The cmdlet is not run.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: wi\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Update-AllTheThings/#-confirm","title":"-Confirm","text":"<p>Prompts you for confirmation before running the cmdlet.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases: cf\n\nRequired: False\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"Update-AllTheThings/#commonparameters","title":"CommonParameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutBuffer, -OutVariable, -PipelineVariable, -Verbose, -WarningAction, -WarningVariable, and -ProgressAction.  For more information, see about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216).</p>"},{"location":"Update-AllTheThings/#inputs","title":"INPUTS","text":""},{"location":"Update-AllTheThings/#outputs","title":"OUTPUTS","text":""},{"location":"Update-AllTheThings/#notes","title":"NOTES","text":""},{"location":"Update-AllTheThings/#related-links","title":"RELATED LINKS","text":""}]}